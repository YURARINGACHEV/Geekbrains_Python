"""1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора
класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных
в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения
двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д."""
import numpy as np

def print_matrix(mas):
    for i in range(len(mas)):

        for j in range(len(mas[0])):
            print(f"{mas[i][j]:>3}", end='')
        print('\n')

class Matrix:
    def __init__(self, mas):
        self.mas = mas
        for i in range(len(self.mas)):

            for j in range(len(self.mas[0])):
                print(f"{self.mas[i][j]:>3}", end='')
            print('\n')

    def __str__(self):
        return f'Матрица\n {(self.mas)}'

    def __add__(self, other):
        return Matrix(np.array(self.mas)+ np.array(other.mas))

mas_1 = Matrix([[1,2],[3,4],[10,12]])
# mas = Matrix([[1,2],[3,4],[10,12]])
# print(mas + mas_1)
print(mas_1)
